name: Build & deploy to server

on:
  push:
    branches:
      - deploy

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      REMOTE_PATH: /home/smaug/sites/alexandrie

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v1

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      # -------------------------
      # Build frontend and backend
      # -------------------------
      - name: Build Go backend
        run: |
          cd backend
          go mod download
          GOOS=linux GOARCH=amd64 go build -o backend_app

      - name: Build frontend
        run: |
          cd frontend
          bun install
          bun run build

      # -------------------------
      # Prepare SSH connection
      # -------------------------
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -t ed25519 "${SSH_HOST}" >> ~/.ssh/known_hosts
          printf "%s" "${DEPLOY_SSH_KEY}" > deploy_key
          chmod 600 deploy_key
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}

      # -------------------------
      # Generate .env file with secrets & configuration
      # -------------------------
      - name: Create .env.production for application
        run: |
          cat > .env.production <<EOF
          NODE_ENV=production
          DATABASE_USER=${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD="${{ secrets.DATABASE_PASSWORD }}"
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          MINIO_ACCESSKEY=${{ secrets.MINIO_ACCESSKEY }}
          MINIO_SECRETKEY=${{ secrets.MINIO_SECRETKEY }}
          SMTP_HOST=${{ secrets.SMTP_HOST }}
          SMTP_MAIL=${{ secrets.SMTP_MAIL }}
          SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
          NUXT_PUBLIC_BASE_API=https://api.alexandrie-hub.fr
          NUXT_PUBLIC_BASE_CDN=https://cdn.alexandrie-hub.fr
          EOF

      # -------------------------
      # Deploy files using rsync
      # -------------------------
      - name: Deploy frontend & backend
        run: |
          rsync -avz  --delete --force --exclude 'server/node_modules' -e "ssh -i deploy_key" frontend/.output ${SSH_USER}@${SSH_HOST}:${REMOTE_PATH}/frontend
          rsync -avz --delete --force -e "ssh -i deploy_key" backend/backend_app backend/config.toml backend/migrations ${SSH_USER}@${SSH_HOST}:${REMOTE_PATH}/backend
          rsync -avz --delete --force -e "ssh -i deploy_key" ecosystem.config.js ${SSH_USER}@${SSH_HOST}:${REMOTE_PATH}
          rsync -avz --delete --force -e "ssh -i deploy_key" .env.production ${SSH_USER}@${SSH_HOST}:${REMOTE_PATH}/.env.production

      # -------------------------
      # Rollback + restart app
      # -------------------------
      - name: Restart application with pm2
        run: |
          ssh -i deploy_key ${SSH_USER}@${SSH_HOST} "
            set -e
            cd ${REMOTE_PATH}
            # Load environment variables
            set -o allexport
            source .env.production
            set +o allexport
            # Reload or start the application
            pm2 delete ecosystem.config.js || true
            pm2 start ecosystem.config.js
          "

      # -------------------------
      # Cleanup sensitive files
      # -------------------------
      - name: Cleanup
        run: |
          rm -f deploy_key .env.production
