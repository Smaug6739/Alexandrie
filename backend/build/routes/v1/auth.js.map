{"version":3,"file":"auth.js","sourceRoot":"","sources":["../../../src/routes/v1/auth.ts"],"names":[],"mappings":";;;AAAA,qCAAiC;AACjC,yEAAmD;AAGnD,MAAM,UAAU,GAAW,IAAA,gBAAM,GAAE,CAAC;AAEpC,kBAAe,CAAC,MAAW,EAAU,EAAE;IACrC,OAAO;QACL,KAAK,EAAE,MAAM;QACb,OAAO,EAAE,CAAC;QACV,MAAM;YACJ,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YACpE,UAAU,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YACzF,OAAO,UAAU,CAAC;QACpB,CAAC;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { Router } from 'express';\nimport * as AuthCtrl from '../../controllers/auth';\nimport type { Iroute } from '../../types';\nimport type { App } from '../../app';\nconst AuthRouter: Router = Router();\n\nexport default (client: App): Iroute => {\n  return {\n    route: 'auth',\n    version: 1,\n    router() {\n      AuthRouter.post('/', (req, res) => AuthCtrl.auth(client, req, res));\n      AuthRouter.get('/disconnection', (req, res) => AuthCtrl.disconnection(client, req, res));\n      return AuthRouter;\n    },\n  };\n};\n"]}