{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":"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","sourcesContent":["import { readdirSync } from 'fs';\nimport { join } from 'path';\nimport express from 'express';\nimport type { Request, Response } from 'express';\nimport type { Iroute } from './types';\n\nimport { checkAndChange, error } from './utils/functions';\nexport class App {\n  private app;\n  public port: string;\n  constructor() {\n    this.app = express();\n    this.port = process.env.DOCS_SERVER_PORT!;\n    console.log(`Starting in ${process.env.NODE_ENV} mode...`);\n  }\n  private async handleRoutes() {\n    const directories = readdirSync(join(__dirname, 'routes'));\n    for (const dir of directories) {\n      const routes = readdirSync(join(__dirname, `routes/${dir}`)).filter(file => file.endsWith('.js'));\n      for (const file of routes) {\n        const getFile = (await import(join(__dirname, `routes/${dir}/${file}`))).default;\n        const fileInfos = getFile(this) as Iroute;\n        this.app.use(`/api/v${fileInfos.version}/${fileInfos.route}`, fileInfos.router());\n        console.log(`Loaded route : /api/v${fileInfos.version}/${fileInfos.route}`);\n      }\n    }\n  }\n  private handleMiddlewares(): void {\n    this.app.use(express.urlencoded({ extended: true, limit: '5mb' }));\n    this.app.use(express.json({ limit: '5mb' }));\n    this.app.use(function (req: Request, res: Response, next: Function) {\n      const origin = req.headers.origin;\n      if (!origin) return next();\n      if (process.env.DOMAIN_CLIENT === origin || process.env.DOMAIN_DASHBOARD === origin)\n        res.setHeader('Access-Control-Allow-Origin', origin);\n      res.setHeader(\n        'Access-Control-Allow-Headers',\n        'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers',\n      );\n      res.setHeader('Access-Control-Allow-Credentials', 'true');\n      res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\n      next();\n    });\n    if (process.env.NODE_ENV !== 'producRFtion') {\n      const morgan = require('morgan')('dev');\n      this.app.use(morgan);\n    }\n  }\n  public async start() {\n    this.handleMiddlewares();\n    await this.handleRoutes();\n    this.app.use(async function (err: Error, _: Request, res: Response, __: Function) {\n      if (err.message.match('File too large')) res.status(500).json(error('[ERROR_FILE_SIZE] File is too large.'));\n      else console.error(err);\n    });\n\n    const staticOptions = {\n      dotfiles: 'ignore',\n      etag: false,\n      index: false,\n      maxAge: '7d',\n      redirect: false,\n      setHeaders: function (res: Response) {\n        res.set('x-timestamp', Date.now().toString());\n      },\n    };\n    this.app.use('/static', express.static(join(__dirname, '../public'), staticOptions));\n\n    this.app.listen(this.port, () => {\n      console.log(`Started on port ${this.port}`);\n    });\n    this.app.all('*', (req: Request, res: Response) => {\n      console.log(req.path);\n\n      res.status(404).json(checkAndChange(new Error('404 not found')));\n    });\n  }\n}\n"]}