{"version":3,"file":"Members.js","sourceRoot":"","sources":["../../src/classes/Members.ts"],"names":[],"mappings":";;;;AAAA,8DAA8B;AAC9B,mCAAiC;AAGjC,MAAa,WAAW;IACf,IAAI,CAAC,QAAgB,EAAE,QAAgB;QAC5C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC;gBAAE,OAAO,MAAM,CAAC,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAC;YAC9G,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC;gBAAE,OAAO,MAAM,CAAC,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAC;YAC9G,YAAE,CAAC,KAAK,CAAS,kDAAkD,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE;gBACtG,IAAI,GAAG;oBAAE,OAAO,MAAM,CAAC,0BAA0B,CAAC,CAAC;gBACnD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBAAE,OAAO,MAAM,CAAC,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC;gBACpE,MAAM,KAAK,GAAG,MAAM,IAAA,gBAAO,EAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAC3D,IAAI,CAAC,KAAK;oBAAE,OAAO,MAAM,CAAC,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC;gBAC/D,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAdD,kCAcC","sourcesContent":["import db from '../models/db';\nimport { compare } from 'bcrypt';\nimport type { IObject, User } from '../types';\n\nexport class MemberClass {\n  public auth(username: string, password: string): Promise<IObject> {\n    return new Promise((resolve, reject) => {\n      if (!username || (username && username.trim() === '')) return reject(new Error('Username must be provided.'));\n      if (!password || (password && password.trim() === '')) return reject(new Error('Password must be provided.'));\n      db.query<User[]>('SELECT * FROM members WHERE username = ? LIMIT 1', [username], async (err, results) => {\n        if (err) return reject('Internal database error.');\n        if (!results[0]) return reject(new Error('Bad username/password.'));\n        const valid = await compare(password, results[0].password);\n        if (!valid) return reject(new Error('Bad username/password.'));\n        resolve(results[0]);\n      });\n    });\n  }\n}\n"]}