{"version":3,"file":"articles.js","sourceRoot":"","sources":["../../src/controllers/articles.ts"],"names":[],"mappings":"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","sourcesContent":["import Article from '../classes/Articles';\nimport { error, success } from '../utils/functions';\nimport type { Response, Request } from 'express';\nimport type { App } from '../app';\n\nexport default class ArticlesController {\n  app: App;\n  Articles: Article;\n  constructor(app: App) {\n    this.app = app;\n    this.Articles = new Article();\n  }\n  getAllArticles(req: Request, res: Response) {\n    if (req.query.category) {\n      this.Articles.getAllByCategory(req.query.category.toString())\n        .then((result: any) => res.status(200).json(success(result)))\n        .catch((err: Error) => res.status(500).json(error(err.message)));\n    } else {\n      this.Articles.getAll()\n        .then((result: any) => res.status(200).json(success(result)))\n        .catch((err: Error) => res.status(500).json(error(err.message)));\n    }\n  }\n  add(req: Request, res: Response): void {\n    this.Articles.add(\n      req.body.name,\n      req.body.path,\n      req.body.main_category,\n      req.body.sub_category,\n      req.body.description,\n      req.body.content_markdown,\n      req.body.content_html,\n      req.cookies.user_id,\n    )\n      .then(a => res.status(201).json(success(a)))\n      .catch(err => res.status(500).json(error(err.message)));\n  }\n  updateArticle(req: Request, res: Response) {\n    this.Articles.put(\n      req.params.id as string,\n      req.body.name,\n      req.body.description,\n      req.body.path,\n      req.body.main_category,\n      req.body.sub_category,\n      req.body.content_markdown,\n      req.body.content_html,\n    )\n      .then(() => res.status(201).json(success('success')))\n      .catch(err => res.status(500).json(error(err.message)));\n  }\n  deleteArticle(req: Request, res: Response) {\n    this.Articles.delete(req.params.id as string)\n      .then(() => res.status(201).json(success('success')))\n      .catch((err: Error) => res.status(500).json(error(err.message)));\n  }\n}\n"]}