{"version":3,"file":"auth.js","sourceRoot":"","sources":["../../src/controllers/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import { MemberClass } from '../classes/Members';\nimport { checkAndChange } from '../utils/functions';\nimport { sign } from 'jsonwebtoken';\nimport type { Request, Response } from 'express';\nimport type { App } from '../app';\n\nconst Members = new MemberClass();\n\nexport function auth(_: App, req: Request, res: Response): void {\n  Members.auth(req.body.username, req.body.password)\n    .then(result => {\n      const token = sign(\n        {\n          exp: Math.floor(Math.floor(Date.now() / 1000) + 6 * 60 * 60),\n          expiresIn: 20000,\n          userId: result.id,\n          userPermissions: result.permissions,\n        },\n        process.env.JWT_SECRET || '',\n      );\n      res.cookie('user_token', `${token}`, {\n        maxAge: 3600000 * 3,\n        httpOnly: true,\n        domain: process.env.FRONT_DOMAIN,\n        secure: process.env.NODE_ENV == 'production' ? true : false,\n        sameSite: 'lax',\n      }); //process.env.NODE_ENV == 'production' ? 'None' : 'lax'\n      res.cookie('user_id', `${result.id}`, {\n        maxAge: 3600000 * 3,\n        httpOnly: true,\n        domain: process.env.FRONT_DOMAIN,\n        secure: process.env.NODE_ENV == 'production' ? true : false,\n        sameSite: 'lax',\n      }); //process.env.NODE_ENV == 'production' ? 'None' : 'lax'\n      res.cookie('user_auth', `true`, {\n        maxAge: 3600000 * 3,\n        httpOnly: false,\n        domain: process.env.FRONT_DOMAIN,\n        secure: process.env.NODE_ENV == 'production' ? true : false,\n        sameSite: 'lax',\n      }); //process.env.NODE_ENV == 'production' ? 'None' : 'lax'\n      res.status(200).json(\n        checkAndChange({\n          auth: {\n            auth: true,\n          },\n        }),\n      );\n    })\n    .catch(error => res.json(checkAndChange(error)));\n}\nexport function disconnection(_: App, __: Request, res: Response): void {\n  res.clearCookie('user_auth', { domain: process.env.FRONT_DOMAIN });\n  res.clearCookie('user_id', { domain: process.env.FRONT_DOMAIN });\n  res.clearCookie('user_token', { domain: process.env.FRONT_DOMAIN });\n  res.status(200).json(checkAndChange('success'));\n}\n"]}