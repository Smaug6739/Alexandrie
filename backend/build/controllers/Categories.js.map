{"version":3,"file":"Categories.js","sourceRoot":"","sources":["../../src/controllers/Categories.ts"],"names":[],"mappings":"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","sourcesContent":["import Categorie from '../classes/Categories';\nimport { error, success } from '../utils/functions';\nimport type { Request, Response } from 'express';\nimport type { App } from '../app';\n\nconst Categories = new Categorie();\n\nexport default class CategoriesController {\n  app: App;\n  constructor(app: App) {\n    this.app = app;\n  }\n  getAll(_: Request, res: Response): void {\n    Categories.getAll()\n      .then((result: any) => res.status(200).json(success(result)))\n      .catch((err: Error) => res.status(500).json(error(err.message)));\n  }\n  addMainCategory(req: Request, res: Response): void {\n    Categories.addMainCategory(req.body.name, req.body.description, req.body.order, req.body.path, req.body.icon)\n      .then(c => res.status(201).json(success(c)))\n      .catch(err => res.status(500).json(error(err.message)));\n  }\n  addSubCategory(req: Request, res: Response): void {\n    Categories.addSubCategory(\n      req.body.name,\n      req.body.description,\n      req.body.order,\n      req.body.path,\n      req.body.icon,\n      req.body.parent_category,\n    )\n      .then(c => res.status(201).json(success(c)))\n      .catch(err => res.status(500).json(error(err.message)));\n  }\n  updateMainCategory(req: Request, res: Response) {\n    Categories.updateMainCategory(\n      req.params.id as string,\n      req.body.name,\n      req.body.description,\n      req.body.order,\n      req.body.path,\n      req.body.icon,\n    )\n      .then(() => res.status(200).json(success('success')))\n      .catch(err => res.status(500).json(error(err.message)));\n  }\n  updateSubCategory(req: Request, res: Response) {\n    Categories.updateSubCategory(\n      req.params.id as string,\n      req.body.name,\n      req.body.description,\n      req.body.order,\n      req.body.path,\n      req.body.icon,\n      req.body.parent_category,\n    )\n      .then(() => res.status(200).json(success('success')))\n      .catch(err => res.status(500).json(error(err.message)));\n  }\n  deleteMainCategory(req: Request, res: Response) {\n    Categories.deleteMainCategory(req.params.id as string)\n      .then(() => res.status(200).json(success('success')))\n      .catch(err => res.status(500).json(error(err.message)));\n  }\n  deleteSubCategory(req: Request, res: Response) {\n    Categories.deleteSubCategory(req.params.id as string)\n      .then(() => res.status(200).json(success('success')))\n      .catch(err => res.status(500).json(error(err.message)));\n  }\n}\n"]}