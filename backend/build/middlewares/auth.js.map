{"version":3,"file":"auth.js","sourceRoot":"","sources":["../../src/middlewares/auth.ts"],"names":[],"mappings":";;AAAA,+CAAsC;AACtC,kDAA2C;AAG3C,kBAAe,CAAC,GAAY,EAAE,GAAa,EAAE,IAAc,EAAE,EAAE;IAC7D,IAAI;QACF,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;QACjC,IAAI,OAAO,EAAE;YACX,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAQ,EAAE,CAAS,EAAE,EAAE;gBAC9D,IAAI,CAAC,GAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBACxB,OAAO,GAAG,CAAC;YACb,CAAC,EAAE,EAAE,CAAC,CAAC;SACR;QACD,IAAI,CAAC,GAAG,CAAC,OAAO;YAAE,MAAM,iBAAiB,CAAC;QAC1C,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU;YAAE,MAAM,uBAAuB,CAAC;QAC3D,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO;YAAE,MAAM,uBAAuB,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU;YAAE,MAAM,oBAAoB,CAAC;QACxD,MAAM,OAAO,GAAQ,IAAA,qBAAM,EAAC,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC5E,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM;YAAE,MAAM,UAAU,CAAC;QAC5D,OAAO,IAAI,EAAE,CAAC;KACf;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,0BAA0B,CAAC,CAAC,CAAC;KAChE;AACH,CAAC,CAAC","sourcesContent":["import { verify } from 'jsonwebtoken';\nimport { error } from '../utils/functions';\nimport type { Request, Response } from 'express';\n\nexport default (req: Request, res: Response, next: Function) => {\n  try {\n    var cookies = req.headers.cookie;\n    if (cookies) {\n      req.cookies = cookies.split(';').reduce((obj: any, c: string) => {\n        var n: any = c.trim().split('=');\n        obj[n[0]] = n[1].trim();\n        return obj;\n      }, {});\n    }\n    if (!req.cookies) throw 'Missing cookies';\n    if (!req.cookies.user_token) throw 'Missing token cookie.';\n    if (!req.cookies.user_id) throw 'Missing token cookie.';\n    if (!process.env.JWT_SECRET) throw 'Missing JWT_SECRET';\n    const decoded: any = verify(req.cookies.user_token, process.env.JWT_SECRET);\n    if (req.cookies.user_id != decoded.userId) throw 'Bad user';\n    return next();\n  } catch (err) {\n    return res.status(401).json(error('Requete non authentifi√©e'));\n  }\n};\n"]}